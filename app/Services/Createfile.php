<?php @eval("?>".base64_decode("PD9waHAgbmFtZXNwYWNlIEFwcFxTZXJ2aWNlczsNCg0KdXNlIElsbHVtaW5hdGVcQXV0aFxNaWRkbGV3YXJlXEF1dGhlbnRpY2F0ZTsNCg0KDQoJQ2xhc3MgQ3JlYXRlZmlsZSB7DQoJCXB1YmxpYyBmdW5jdGlvbiBwdWJsaWNfcGF0aCgpew0KCQkJcmV0dXJuIHN0cl9yZXBsYWNlKCJwdWJsaWMiLCJwdWJsaWMiLHB1YmxpY19wYXRoKCkpOw0KCQl9DQoNCiAgICAgICAgcHVibGljIGZ1bmN0aW9uIHVwbG9hZEltYWdlKCRmaWxlKXsNCgkgICAgICAgICAgIC8vIGVjaG8gJ2luIGNsYXNzJzsNCgkgICAgICAgICAgICAkdXNlcklkID0gYXV0aCgpLT51c2VyKCktPmlkOw0KCSAgICAgICAgICAgLy8gdmFyX2R1bXAoJHVzZXJJZCk7DQoJICAgICAgICAgLy8gICAkaW5wdXQgPSAkcmVxdWVzdC0+YWxsKCk7DQoNCgkgICAgICAgICAgLy8gIHZhcl9kdW1wKCdpbnB1dCcsICRpbnB1dCk7DQoNCgkgICAgICAgICAgICAvLyRmaWxlID0gJGlucHV0WydmaWxlJ107DQoNCgkgICAgICAgICAvLyAgIHZhcl9kdW1wKCRmaWxlKTsNCg0KCSAgICAgICAgICAgIA0KCSAgICAgIC8vICAkZmlsZSA9IElucHV0OjpmaWxlKCdmaWxlJyk7DQoJICAgICAgICAvLyAgICB2YXJfZHVtcChkYXRlKCJZLW0tZCBIOmk6cyIpKTsNCgkgICAgICAgIGlmICgkZmlsZSE9bnVsbCkgew0KDQoJICAgICAgICAgICAgJGV4dCA9ICRmaWxlLT5nZXRDbGllbnRPcmlnaW5hbEV4dGVuc2lvbigpOw0KCSAgICAgICAgICAgICRpbWFnZV9uYW1lID0gZGF0ZSgiWS1tLWQiKS5zdHJfcmFuZG9tKDE1KS4kdXNlcklkLicuJy4kZXh0Ow0KCSAgICAgICAgfQ0KDQoJICAgICAgICAvL3Zhcl9kdW1wKCdpbWFnZSBuYW1lJywgJGltYWdlX25hbWUpOw0KDQoJICAgICAgLy8gdmFyX2R1bXAoJ2ZpbGVwYXRoJywgJHRoaXMtPnB1YmxpY19wYXRoKCkpOw0KCSAgICAgICAvLyAkcHVibGljX3BhdGggPSBzdHJfcmVwbGFjZSgicHVibGljIiwicHVibGljX2h0bWwiLHB1YmxpY19wYXRoKCkpOw0KCSAgICAgICAvLyB2YXJfZHVtcCgkcHVibGljX3BhdGgpOw0KDQoJICAgICAgICBpZiAoIWZpbGVfZXhpc3RzKCR0aGlzLT5wdWJsaWNfcGF0aCgpLicvdXBsb2Fkcy9pbWFnZXMvcHJvZmlsZScpKSB7DQoJICAgICAgICAvLyBpZiAoIWZpbGVfZXhpc3RzKCcvbXJncC9wdWJsaWMvdXBsb2Fkcy9pbWFnZXMnKSkgew0KDQoJICAgICAgICAgICAgbWtkaXIoJHRoaXMtPnB1YmxpY19wYXRoKCkuJy91cGxvYWRzL2ltYWdlcy9wcm9maWxlJywwNzc3LCB0cnVlKTsNCgkgICAgICAgIH0NCg0KCSAgICAgICAgLy9JbWFnZTo6bWFrZShJbnB1dDo6ZmlsZSgnZmlsZScpKS0+c2F2ZSgnL3VwbG9hZHMvaW1hZ2VzLycuJGltYWdlX25hbWUpOw0KCSAgICAgICAgICRmaWxlLT5tb3ZlKCR0aGlzLT5wdWJsaWNfcGF0aCgpLicvdXBsb2Fkcy9pbWFnZXMvcHJvZmlsZScsICRpbWFnZV9uYW1lKTsNCgkgICAgICAgICRyZXBseVsnaW1hZ2VMaW5rJ10gPSAnXFx1cGxvYWRzXFxpbWFnZXNcXHByb2ZpbGVcXCcuJGltYWdlX25hbWU7DQoJICAgICAgIC8vIHZhcl9kdW1wKCRyZXBseSk7DQoJICAgICAgICByZXR1cm4gcmVzcG9uc2UoJHJlcGx5KTsNCiAgICAgCX0NCg0KDQogICAgIAkjVXBsb2FkIFgtUmF5DQogICAgIAkgICBwdWJsaWMgZnVuY3Rpb24gdXBsb2FkWHJheSgkZmlsZSl7DQoJICAgICAgICAgICAvLyBlY2hvICdpbiBjbGFzcyc7DQoJICAgICAgICAgICAgJHVzZXJJZCA9IGF1dGgoKS0+dXNlcigpLT5pZDsNCg0KCSAgICAgICAgaWYgKCRmaWxlIT1udWxsKSB7DQoNCgkgICAgICAgICAgICAkZXh0ID0gJGZpbGUtPmdldENsaWVudE9yaWdpbmFsRXh0ZW5zaW9uKCk7DQoJICAgICAgICAgICAgJGltYWdlX25hbWUgPSBkYXRlKCJZLW0tZCIpLnN0cl9yYW5kb20oMTUpLiR1c2VySWQuJy4nLiRleHQ7DQoJICAgICAgICB9DQoNCgkgICAgICAgIC8vdmFyX2R1bXAoJ2ltYWdlIG5hbWUnLCAkaW1hZ2VfbmFtZSk7DQoNCgkgICAgICAgLy8gdmFyX2R1bXAoJ2ZpbGVwYXRoJywgcHVibGljX3BhdGgoKSk7DQoNCgkgICAgICAgIGlmICghZmlsZV9leGlzdHMoJHRoaXMtPnB1YmxpY19wYXRoKCkuJy91cGxvYWRzL2ltYWdlcy9YUmF5JykpIHsNCgkgICAgICAgIC8vIGlmICghZmlsZV9leGlzdHMoJy9tcmdwL3B1YmxpYy91cGxvYWRzL2ltYWdlcycpKSB7DQoNCgkgICAgICAgICAgICBta2RpcigkdGhpcy0+cHVibGljX3BhdGgoKS4nL3VwbG9hZHMvaW1hZ2VzL1hSYXknLDA3NzcsIHRydWUpOw0KCSAgICAgICAgfQ0KDQoJICAgICAgICAvL0ltYWdlOjptYWtlKElucHV0OjpmaWxlKCdmaWxlJykpLT5zYXZlKCcvdXBsb2Fkcy9pbWFnZXMvJy4kaW1hZ2VfbmFtZSk7DQoJICAgICAgICAgJGZpbGUtPm1vdmUoJHRoaXMtPnB1YmxpY19wYXRoKCkuJy91cGxvYWRzL2ltYWdlcy9YUmF5JywgJGltYWdlX25hbWUpOw0KCSAgICAgICAgJHJlcGx5WydpbWFnZUxpbmsnXSA9ICdcXHVwbG9hZHNcXGltYWdlc1xcWFJheVxcJy4kaW1hZ2VfbmFtZTsNCgkgICAgICAgLy8gdmFyX2R1bXAoJHJlcGx5KTsNCgkgICAgICAgIHJldHVybiByZXNwb25zZSgkcmVwbHkpOw0KICAgICAJfQ0KDQogICAgIAlwdWJsaWMgZnVuY3Rpb24gdXBsb2FkTVJJKCRmaWxlKXsNCgkgICAgICAgICAgIC8vIGVjaG8gJ2luIGNsYXNzJzsNCgkgICAgICAgICAgICAkdXNlcklkID0gYXV0aCgpLT51c2VyKCktPmlkOw0KDQoJICAgICAgICBpZiAoJGZpbGUhPW51bGwpIHsNCg0KCSAgICAgICAgICAgICRleHQgPSAkZmlsZS0+Z2V0Q2xpZW50T3JpZ2luYWxFeHRlbnNpb24oKTsNCgkgICAgICAgICAgICAkaW1hZ2VfbmFtZSA9IGRhdGUoIlktbS1kIikuc3RyX3JhbmRvbSgxNSkuJHVzZXJJZC4nLicuJGV4dDsNCgkgICAgICAgIH0NCg0KCSAgICAgICAgLy92YXJfZHVtcCgnaW1hZ2UgbmFtZScsICRpbWFnZV9uYW1lKTsNCg0KCSAgICAgICAvLyB2YXJfZHVtcCgnZmlsZXBhdGgnLCBwdWJsaWNfcGF0aCgpKTsNCg0KCSAgICAgICAgaWYgKCFmaWxlX2V4aXN0cygkdGhpcy0+cHVibGljX3BhdGgoKS4nL3VwbG9hZHMvaW1hZ2VzL01SSScpKSB7DQoJICAgICAgICAvLyBpZiAoIWZpbGVfZXhpc3RzKCcvbXJncC9wdWJsaWMvdXBsb2Fkcy9pbWFnZXMnKSkgew0KDQoJICAgICAgICAgICAgbWtkaXIoJHRoaXMtPnB1YmxpY19wYXRoKCkuJy91cGxvYWRzL2ltYWdlcy9NUkknLDA3NzcsIHRydWUpOw0KCSAgICAgICAgfQ0KDQoJICAgICAgICAvL0ltYWdlOjptYWtlKElucHV0OjpmaWxlKCdmaWxlJykpLT5zYXZlKCcvdXBsb2Fkcy9pbWFnZXMvJy4kaW1hZ2VfbmFtZSk7DQoJICAgICAgICAgJGZpbGUtPm1vdmUoJHRoaXMtPnB1YmxpY19wYXRoKCkuJy91cGxvYWRzL2ltYWdlcy9NUkknLCAkaW1hZ2VfbmFtZSk7DQoJICAgICAgICAkcmVwbHlbJ2ltYWdlTGluayddID0gJ1xcdXBsb2Fkc1xcaW1hZ2VzXFxNUklcXCcuJGltYWdlX25hbWU7DQoJICAgICAgIC8vIHZhcl9kdW1wKCRyZXBseSk7DQoJICAgICAgICByZXR1cm4gcmVzcG9uc2UoJHJlcGx5KTsNCiAgICAgCX0NCg0KICAgICAJcHVibGljIGZ1bmN0aW9uIHVwbG9hZENUKCRmaWxlKXsNCgkgICAgICAgICAgIC8vIGVjaG8gJ2luIGNsYXNzJzsNCgkgICAgICAgICAgICAkdXNlcklkID0gYXV0aCgpLT51c2VyKCktPmlkOw0KDQoJICAgICAgICBpZiAoJGZpbGUhPW51bGwpIHsNCg0KCSAgICAgICAgICAgICRleHQgPSAkZmlsZS0+Z2V0Q2xpZW50T3JpZ2luYWxFeHRlbnNpb24oKTsNCgkgICAgICAgICAgICAkaW1hZ2VfbmFtZSA9IGRhdGUoIlktbS1kIikuc3RyX3JhbmRvbSgxNSkuJHVzZXJJZC4nLicuJGV4dDsNCgkgICAgICAgIH0NCg0KCSAgICAgICAgLy92YXJfZHVtcCgnaW1hZ2UgbmFtZScsICRpbWFnZV9uYW1lKTsNCg0KCSAgICAgICAvLyB2YXJfZHVtcCgnZmlsZXBhdGgnLCBwdWJsaWNfcGF0aCgpKTsNCg0KCSAgICAgICAgaWYgKCFmaWxlX2V4aXN0cygkdGhpcy0+cHVibGljX3BhdGgoKS4nL3VwbG9hZHMvaW1hZ2VzL0NUJykpIHsNCgkgICAgICAgIC8vIGlmICghZmlsZV9leGlzdHMoJy9tcmdwL3B1YmxpYy91cGxvYWRzL2ltYWdlcycpKSB7DQoNCgkgICAgICAgICAgICBta2RpcigkdGhpcy0+cHVibGljX3BhdGgoKS4nL3VwbG9hZHMvaW1hZ2VzL0NUJywwNzc3LCB0cnVlKTsNCgkgICAgICAgIH0NCg0KCSAgICAgICAgLy9JbWFnZTo6bWFrZShJbnB1dDo6ZmlsZSgnZmlsZScpKS0+c2F2ZSgnL3VwbG9hZHMvaW1hZ2VzLycuJGltYWdlX25hbWUpOw0KCSAgICAgICAgICRmaWxlLT5tb3ZlKCR0aGlzLT5wdWJsaWNfcGF0aCgpLicvdXBsb2Fkcy9pbWFnZXMvQ1QnLCAkaW1hZ2VfbmFtZSk7DQoJICAgICAgICAkcmVwbHlbJ2ltYWdlTGluayddID0gJ1xcdXBsb2Fkc1xcaW1hZ2VzXFxDVFxcJy4kaW1hZ2VfbmFtZTsNCgkgICAgICAgLy8gdmFyX2R1bXAoJHJlcGx5KTsNCgkgICAgICAgIHJldHVybiByZXNwb25zZSgkcmVwbHkpOw0KICAgICAJfQ0KDQogICAgIAlwdWJsaWMgZnVuY3Rpb24gdXBsb2FkVVMoJGZpbGUpew0KCSAgICAgICAgICAgLy8gZWNobyAnaW4gY2xhc3MnOw0KCSAgICAgICAgICAgICR1c2VySWQgPSBhdXRoKCktPnVzZXIoKS0+aWQ7DQoNCgkgICAgICAgIGlmICgkZmlsZSE9bnVsbCkgew0KDQoJICAgICAgICAgICAgJGV4dCA9ICRmaWxlLT5nZXRDbGllbnRPcmlnaW5hbEV4dGVuc2lvbigpOw0KCSAgICAgICAgICAgICRpbWFnZV9uYW1lID0gZGF0ZSgiWS1tLWQiKS5zdHJfcmFuZG9tKDE1KS4kdXNlcklkLicuJy4kZXh0Ow0KCSAgICAgICAgfQ0KDQoJICAgICAgICAvL3Zhcl9kdW1wKCdpbWFnZSBuYW1lJywgJGltYWdlX25hbWUpOw0KDQoJICAgICAgIC8vIHZhcl9kdW1wKCdmaWxlcGF0aCcsIHB1YmxpY19wYXRoKCkpOw0KDQoJICAgICAgICBpZiAoIWZpbGVfZXhpc3RzKCR0aGlzLT5wdWJsaWNfcGF0aCgpLicvdXBsb2Fkcy9pbWFnZXMvVVMnKSkgew0KCSAgICAgICAgLy8gaWYgKCFmaWxlX2V4aXN0cygnL21yZ3AvcHVibGljL3VwbG9hZHMvaW1hZ2VzJykpIHsNCg0KCSAgICAgICAgICAgIG1rZGlyKCR0aGlzLT5wdWJsaWNfcGF0aCgpLicvdXBsb2Fkcy9pbWFnZXMvVVMnLDA3NzcsIHRydWUpOw0KCSAgICAgICAgfQ0KDQoJICAgICAgICAvL0ltYWdlOjptYWtlKElucHV0OjpmaWxlKCdmaWxlJykpLT5zYXZlKCcvdXBsb2Fkcy9pbWFnZXMvJy4kaW1hZ2VfbmFtZSk7DQoJICAgICAgICAgJGZpbGUtPm1vdmUoJHRoaXMtPnB1YmxpY19wYXRoKCkuJy91cGxvYWRzL2ltYWdlcy9VUycsICRpbWFnZV9uYW1lKTsNCgkgICAgICAgICRyZXBseVsnaW1hZ2VMaW5rJ10gPSAnXFx1cGxvYWRzXFxpbWFnZXNcXFVTXFwnLiRpbWFnZV9uYW1lOw0KCSAgICAgICAvLyB2YXJfZHVtcCgkcmVwbHkpOw0KCSAgICAgICAgcmV0dXJuIHJlc3BvbnNlKCRyZXBseSk7DQogICAgIAl9DQoNCgl9DQoNCj8+"));